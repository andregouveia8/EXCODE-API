package com.excode.imp;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import javax.ws.rs.core.Response;

import com.excode.data.ExerciseData;
import com.excode.model.Exercise;
import com.excode.model.Solution;
import com.excode.model.TestCase;
import com.excode.model.User;

public class ExerciseManager implements IExercise {

	static ExerciseManager exerciseManager = null;

	List<String> listTags = new ArrayList<String>();
	List<String> listInputs = new ArrayList<String>();
	List<String> listOutputs = new ArrayList<String>();

	public static ExerciseManager getInstance() {
		if (exerciseManager == null) {
			exerciseManager = new ExerciseManager();

		}
		return exerciseManager;
	}

	// GET ALL EXERCISES
	public List<Exercise> getExercises() {
		ExerciseData exerciseData = ExerciseData.getInstance();
		return exerciseData.getExercises();
	}

	// GET A SPECIFIC EXERCISE by EXERCISEID
	public List<Exercise> getExercise_ID(String exerciseID) {
		ExerciseData exerciseData = ExerciseData.getInstance();
		return exerciseData.getExercises_ID(exerciseID);
	}

	// GET A SPECIFIC EXERCISE by DIFCULTY
	public List<Exercise> getExercisesDificulty(String dificulty) {
		ExerciseData exerciseData = ExerciseData.getInstance();
		return exerciseData.getExercisesDificulty(dificulty);
	}

	// GET A SPECIFIC EXERCISE by DURATION
	public List<Exercise> getExercisesDuration(int duration) {
		ExerciseData exerciseData = ExerciseData.getInstance();
		return exerciseData.getExercisesDuration(duration);
	}

	// GET A SPECIFIC EXERCISE by LANGUAGE
	public List<Exercise> getExercisesLanguage(String language) {
		ExerciseData exerciseData = ExerciseData.getInstance();
		return exerciseData.getExercisesLanguage(language);
	}

	// GET A SPECIFIC EXERCISE by TAG
	public List<Exercise> getExercisesTag(String tag) {
		ExerciseData exerciseData = ExerciseData.getInstance();
		return exerciseData.getExercisesTag(tag);
	}

	// GET A SPECIFIC EXERCISE by USER
	public List<Exercise> getExercisesUser(String userID) {
		ExerciseData exerciseData = ExerciseData.getInstance();
		return exerciseData.getExercisesUser(userID);
	}

	// DELETE A SPECIFIC EXERCISE
	public Response removeExercise(String exerciseID, String userIDAuthour) {

		ExerciseData exerciseData = ExerciseData.getInstance();
		return exerciseData.removeExercise(exerciseID);
	}

	public void createExercise(String exerciseID, String title, String userIDAuthour, String statement,
			String dificulty, int duration, String tags, String code, String language, String input, String output) {

		List<User> users = UserManager.getInstance().getUser(userIDAuthour);

		for (User user : users) {
			System.out.println("Dado: " + user.getUserID());
		}

		String[] tags_split = tags.split(" ");
		Collections.addAll(listTags, tags_split);

		String[] inputs_split = tags.split(" ");
		Collections.addAll(listInputs, inputs_split);

		String[] output_split = tags.split(" ");
		Collections.addAll(listOutputs, output_split);

		System.out.println(listTags.size());
		System.out.println(tags_split);
		// System.out.println(listTags);

		Solution solution = new Solution(code, language);
		TestCase testCase = new TestCase(listInputs, listOutputs);

	}

	// Solution solution = new Solution(code,language);
	// TestCase testCase = new TestCase(input,output);
	//
	//
	// User x = (User) userManager.getUser(userIDAuthour);
	//
	//
	//
	//
	//// User user= userManager.getUserLogged(userIDAuthour);
	//
	// User user1 = new User("asd","asdas","adasd","asdas");
	// System.out.print(x.getName());

}
