package com.excode.imp;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;

import com.excode.model.Exercise;
import com.excode.model.Solution;
import com.excode.model.User;

public class ExerciseManager {

	static List<Exercise> exercises = new ArrayList<Exercise>();
	static List<Solution> solutions = new ArrayList<Solution>();
	static ExerciseManager exerciseManager = null;

	public static ExerciseManager getInstance() {
		if (exerciseManager == null) {
			exerciseManager = new ExerciseManager();

			User user = new User("andregouveia8", "porto", "asd@xpto.com", "André Gouveia");
			User user1 = new User("andregouveia9", "porto", "asd@xpto.com", "André Gouveia");
			Solution sol = new Solution("HTML", "Java");
			Solution sol1 = new Solution("HTML CODE", "C#");
			solutions.add(sol);
			solutions.add(sol1);
			Exercise exercise1 = new Exercise(1, "18-10-2017 19:30", "Factorial", user, "Crie um algoritmo ...",
					"Begginer", 3, null, solutions, null);
			Exercise exercise2 = new Exercise(2, "18-10-2017 19:30", "Meteo", user1, "Crie um algoritmo ...",
					"Begginer", 3, null, null, null);
			Exercise exercise3 = new Exercise(2, "18-10-2017 19:30", "Post", user1, "Crie um algoritmo ...", "Begginer",
					3, null, null, null);

			exercises.add(exercise1);
			exercises.add(exercise2);
			exercises.add(exercise3);

		}
		return exerciseManager;
	}

	public List<Exercise> getExercises() {

		return exercises;
	}

	// GET A EXERCISE ID = EXERCISEID
	public Exercise getExercise(int exerciseID) {
		for (Iterator<Exercise> iterator = exercises.iterator(); iterator.hasNext();) {
			Exercise exercise = (Exercise) iterator.next();
			if (exercise.getExerciseID() == exerciseID) {
				return exercise;
			}
		}
		return null;

	}

	public void removeExercise(int exerciseID) {
		for (Iterator<Exercise> iterator = exercises.iterator(); iterator.hasNext();) {
			Exercise exercise = (Exercise) iterator.next();
			if (exercise.getExerciseID() == exerciseID) {
				iterator.remove();
			}
		}
	}
	
	
	
	public Exercise getExerciseRandom(int exerciseID) {
		
	    Random randomGenerator = new Random();
	    
	      int randomInt = randomGenerator.nextInt(exercises.size());

		for (Iterator<Exercise> iterator = exercises.iterator(); iterator.hasNext();) {
			Exercise exercise = (Exercise) iterator.next();
			if (exercise.getExerciseID() == 1) {
				return exercise;
			}
		}
		return null;

	}
	
	
	
	
	
	
	

}
